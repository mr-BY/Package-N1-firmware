name: Build OpenWrt

on:
  workflow_dispatch:
  push:
    branches:
    - kernel/*

env:
  REPO_URL: https://github.com/unifreq/openwrt_packit
  FRIMWARE_URL: https://github.com/mr-BY/Compile-N1-firmware/releases/latest/download/openwrt-armvirt-64-default-rootfs.tar.gz
  BOX: mk_s905d_n1.sh
  REPO_BRANCH: master
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -yqq update
        sudo -E apt-get -yqq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -yqq install btrfs-progs dosfstools uuid-runtime mount util-linux parted
        sudo -E apt-get -yqq autoremove --purge
        sudo -E apt-get -yqq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      id: sourcecode
      run: |
        df -hT $PWD
        mkdir /opt/kernel
        cd /opt
        git clone $REPO_URL -b $REPO_BRANCH openwrt_packit
        cd /opt/openwrt_packit
        echo "::set-output name=change::$(git show -s --date=short --format="Date: %cd<br/>Commit: %s")"

    - name: Load kernel
      run: |
        mv kernel/*.* /opt/kernel

    - name: Download firmware
      id: firmware
      run: |
        cd /opt/openwrt_packit
        wget $FRIMWARE_URL

    - name: Diy
      run: |
        chmod +x diy.sh
        sudo ./diy.sh

    - name: Packit the firmware
      id: packit
      run: |
        cd /opt/openwrt_packit
        sudo ./$BOX
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd /opt/openwrt_packit/tmp
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "üñ•Ô∏è [Information]<br />IP: 192.168.2.1<br />User: root&nbsp;&nbsp;&nbsp;Password: password<br />" >> release.txt
        echo "üîé [Change]<br />${{ steps.sourcecode.outputs.change }}<br />" >> release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer]<br/>${{ steps.cowtransfer.outputs.url }}" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer]<br/>${{ steps.wetransfer.outputs.url }}" >> release.txt
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
